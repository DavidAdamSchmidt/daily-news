@using DailyNews.Models
@using DailyNews.Services
@page "/search/{searchTerm}"
@inject NewsService NewsService

@if (IsLoading)
{
    <div class="spinner" />
}
else if (NewsData?.Status == "error")
{
    <div>Error</div>
}
else if (NewsData != null)
{
    <div class="article-container">
        @foreach (var article in NewsData.Articles)
        {
            <News Article="@article" />
        }
    </div>
}

@code {
    private string _previousSearchTerm;

    [Parameter]
    public string SearchTerm { get; set; }

    public NewsData NewsData { get; set; }

    public bool IsLoading { get; set; }

    protected override Task OnParametersSetAsync()
    {
        return UpdateNews();
    }

    public async Task UpdateNews()
    {
        if (SearchTerm == _previousSearchTerm)
        {
            return;
        }

        IsLoading = true;
        _previousSearchTerm = SearchTerm;

        NewsData = await NewsService.GetNewsAsync(SearchTerm);

        IsLoading = false;
    }
}
